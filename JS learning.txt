 //code 1[Refactoring]
input=prompt("Enter one  letter");
le=['a','b','c','d','e','f','g','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];
 for(i=0;i<26;i++)
{ bin=(le[i]==input)?1:0; console.log(bin);}
//code 2
food=['Rice and Stew','Fried plantain with pepper','Jollof and chicken']; 
for(i=0;i<food.length;i++){ console.log(i+"."+food[i]);}; price=['100','40','70'];
input=prompt("Select an option"); check=0;
for(i=0;i<food.length;i++){ check=(food[i]===food[input])?check:'false';};

//code 3
// Order food
try{food=['Rice and Stew','Fried plantain with pepper','Jollof and chicken']; 
console.log("Select an option");for(i=0;i<food.length;i++){ console.log(i+"."+food[i]);};
price=['100','40','70'];input=prompt("Select an option"); 
console.log("\t You ordered "+food[input]+"\n" +"Price: "+price[input]+" cedis\n Thanks for ordering ");} 
catch{ console.log("Error");}

// code 4 tells us whether user request is found in food list .
food=['Rice and Stew','Fried plantain with pepper','Jollof and chicken']; 
for(i=0;i<food.length;i++){ console.log(i+"."+food[i]);}; price=['100','40','70'];
input=prompt("Select an option"); check=0;console.log("My input fooling is "+input); input=parseInt(input);
for(i=0;i<food.length;i++){ console.log("Hello"+i+":");if(i==input){'True';break;} else {'false';};}

code5 food=['Rice and Stew','Fried plantain with pepper','Jollof and chicken']; 
for(i=0;i<food.length;i++){ console.log(i+"."+food[i]);}; price=['100','40','70'];
input=prompt("Select an option"); check=0;console.log("My input fooling is "+input); input=parseInt(input);
for(i=0;i<food.length;i++){ console.log("Hello"+i+":");if(i==input){'True';console.log("Ordered food is found ");break;} else {'false';};}

//code 6 
input=prompt("Enter one  letter");
le=['a','b','c','d','e','f','g','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
 for(i=0;i<26;i++)
{ {bin=(le[i]==input)?1 :0;};console.log(bin);}


//code 7 deletion queue algorithm
arr=[2,4,5,6,7,'p'];console.log("Before deletion")
console.log(arr);
for(i=0;i<arr.length;i++)
{ arr[i]=null;};console.log("After deletion");console.log(arr); 
//==>Why print some text different from arr is that I want it in be array format meaning like this [num1,num2,...,numN]

//code 8 check isArrFull
arr=[2,4,5,6,7,'p']; arr.length=4294967295;
// check if arr is empty or full 
if(arr.length>4294967296){
console.log("Array size full");}
else{ console.log("Array not full");console.log("Happy Coding !");}


// code 9 insert a node  at  a particular  location 
NodeAddToEndOfArr=(arr,node)=>{
 //adding data at the end of Arr
  i=arr.length; /*Node extended*/
console.log(i);arr.length=node.length*i;console.log(arr.length); //enlarge arr size
 console.log(node.length);//check new length of arr passed
for(b=0;i<arr.length&b<node.length;i++,b++){arr[i]=node[b]; 
console.log(node[b]);;};console.log(arr); }
arr=[2,4,5,6,7];
node=[3,6,5,7];console.log(arr.length);
// check if arr is empty or full 
if(arr.length>4294967296){
console.log("Array size full");}
else{
 console.log("Array not full");
NodeAddToEndOfArr(arr,node);   




//code 10 Insert element in middle part of arr.
arr=[4,6,7,8,5];node=[34,5,6,3];NewArr=[];
//function declaration
addNodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2; /*Divide  arrIndex into two*/; NewArrSize=len*len*node.length;console.log(NewArrSize);NewArr[NewArr];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   { NewArr[i]=arr[i];};console.log(NewArr);if(Middle==i){console.log(len-Middle);};

}
     ;addNodeToMiddleOfArr(arr,node);//function call

/*Note if Less than Middle so JS  will not let if(Middle==i) works and show undefine but  printing outside condition produce 2.5*/

//code 11
/*initial stage*/
arr=[4,6,7,8,5];node=[34,5,6,3];NewArr=[];
//function declaration
addNodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2; /*Divide  arrIndex into two*/; NewArrSize=len*len*node.length;console.log(NewArrSize);NewArr[NewArr];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   { NewArr[i]=arr[i];if(i==Middle){console.log("Hello");};console.log(NewArr);pin=len-Middle;console.log("Number of element left to be added "+ parseInt(pin));
console.log("Node to be added are"+node);
}
addNodeToMiddleOfArr(arr,node)
/*initial stage*/

/*2nd Refactoring*/

arr=[4,6,7,8,5];node=[34,5,6,3];NewArr=[]; 
//function declaration
addNodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2;
  /*Divide  arrIndex into two*/; 
  NewArrSize=len*len*node.length;/*increasing NewArr size*/
  console.log(NewArrSize);NewArr[NewArr];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   {  NewArr[i]=arr[i];};Middle=parseInt(Middle+1); i=Middle;total=node.length+Middle;for(p=0;i<total||p<node.length;i++,p++){ NewArr[i]=node[p];};                                                                                                                                                                                                                                           ;pin=len-Middle;console.log(NewArr);
 console.log("Node to be added are"+node);
 }
 addNodeToMiddleOfArr(arr,node)
/*2nd Refactoring*/

/*3rd Refactoring */

NodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2;
  /*Divide  arrIndex into two*/; 
  NewArrSize=len*len*node.length;/*increasing NewArr size*/
  console.log(NewArrSize);NewArr.length=NewArrSize;};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   {  NewArr[i]=arr[i];};Middle=parseInt(Middle+1);
  i=Middle;total=node.length+Middle;for(p=0;i<total||p<node.length;i++,p++)
   { NewArr[i]=node[p];};                          
   middle=parseInt((len/2)+1); 
   newTotal=middle+total;
  for(i;i<newTotal&&middle<(len);middle++,i++){NewArr[i]=arr[middle];console.log(NewArr[i]);}
   ;pin=len-Middle;console.log(NewArr);console.log("New Arr"+NewArr.length);
 console.log("Node to be added are"+node);
 }
 addNodeToMiddleOfArr(arr,node)
/*3Refactoring 

/*4 Refactoring*/
NodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2;
  /*Divide  arrIndex into two*/; 
  NewArrSize=len*len*node.length;/*increasing NewArr size*/
  console.log(NewArrSize);NewArr[NewArrSize];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   {  NewArr[i]=arr[i];};Middle=parseInt(Middle+1);
  i=Middle;total=node.length+Middle;for(p=0;i<total||p<node.length;i++,p++)
   { NewArr[i]=node[p];};                          
   middle=parseInt((len/2)+1); 
   newTotal=middle+total;
  for(i;i<newTotal&&middle<(len);middle++,i++){NewArr[i]=arr[middle];console.log(NewArr[i]);}
   ;pin=len-Middle;console.log(NewArr);console.log("New Arr"+NewArr.length);
 console.log("Node to be added are"+node);
 }
 addNodeToMiddleOfArr(arr,node)
/*4 Refactoring */

// code 12 total count while is incrementing;
count=1; total=0;
while(count<10)
{
  total+=count;
  count+=1


};
console.log(total);



//code 13  totaling
count=1 ;total =0;
while(count<=10){total+=count; count+=4;}
console.log(total);


//code 14
//code 13  totaling
count=1 ;total =0;
while(count<=10)
{console.log("Number count before cal"+count);total+=count; count+=8;}
console.log(total);

//code 15


arr=[4,6,7,8,5];node=[34,5,6,3];NewArr=[]; 
//function declaration
addNodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2;
  /*Divide  arrIndex into two*/; 
  NewArrSize=len*len*node.length;/*increasing NewArr size*/
  console.log(NewArrSize);NewArr[NewArr];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   {  NewArr[i]=arr[i];};Middle=parseInt(Middle+1);
  i=Middle;total=node.length+Middle;for(p=0;i<total||p<node.length;i++,p++)
   { NewArr[i]=node[p];};                          
   middle=parseInt((len/2)+1); 
   newTotal=middle+total;
  for(i;i<newTotal||middle<len;newTotal++,i++){NewArr[i]=arr[middle];}
   ;pin=len-Middle;console.log(NewArr);
 console.log("Node to be added are"+node);
 }
 addNodeToMiddleOfArr(arr,node) 

//code 16
Natural Language for GraphGenerator :[Take a set of array and  pass through method or function to generate graph]
1. Declare arr and assign element and corresponding values ;
2. GraphGenerator(arr){
method or function generate for each element : name,corresponding graph ,percentage and make professional judgment
}
3. Display all info on screen for user  to see.


//code 16
/*1st Refactoring*/
a=[];b=[]
for(i=0,p=0;i<5;p++,i++)
{
a[p]=i;
b[p]=p

}
if(i==p++)
{ a[p]=b;}
console.log(a);


/*2nd Refactoring*/
a=[];b=[]

for(i=0,p=0;i<5;p++,i++)
{
a[p]=i;
b[p]=p

}
if(i==p)
{ a[p++]=b;}console.log(a);console.log(a.length);
;for(i=0;i<a.length;i++){console.log(a[i])};

//Code 17 Linked list 
/*1st refactoring*/
class box{
 data;//declaration
 next;//another declaration 
box=(data)=>{this.data=data;}
}
;
boxA=new box(4);
boxB=new box(1);
boxC=new box(2);
/*1st refactoring*/
/*2nd Refactoring*/
class box{
 data;//declaration
 next;//another declaration 
box=(data)=>{this.data=data;}
}
;
/*display same result*/
boxA=new box(4);// 

/*2nd Refactoring */

/*3nd Refactoring*/
class box{
 data;//declaration
 next;//another declaration 
box=(data)=>{this.data=data;}
}
;
/*display same result*/
boxA=new box();

/*3nd Refactoring */

/4th Refactoring */
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();box2.data="Solve more problem";
/*comment:if data and next variable which not assigned for box1 will have undefined*/
console.log("Box1 data is "+box1.data);
console.log("Box2 next  is "+box.next); 

/*After assigning the undefined goes away with now tho the values showing */
box1.data=4;
box1.next="Hmm"+box2;
console.log("box1 data is:"+box1.data);
console.log("Next as is"+box1.next)
/*4 th Refactoring*/
/5th Refactoring*/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
/*comment:if data and next variable which not assigned for box1 will have undefined*/  console.log("1.Before Assignment");
console.log("Box1 data is "+box1.data);
console.log("Box1 next  is "+box1.next); 

/*After assigning the undefined goes away with now tho the values showing */ console.log("2.After Assignment");
box1.data=4;
box1.next=box2;
console.log("box1 data is:"+box1.data);console.log("Box1 next is");
console.log(box1.next)
/*5th Refactoring */
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

box1.next=box2;
box2.next=box3;
box3.next=box4;

console.log(box3.next)


/*5Refactoring*/
/6th Refactoring*/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

box1.next=box2;
box2.next=box3;
box3.next=box4;
console.log("box1 next is") ;console.log(box1.next);
console.log("box3 next is");console.log(box3.next);
/*6th Refactoring*/


/*7 th refactoring/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();
/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is about movie";
box3.data="Box3 data is about Business";
box4.data="Box4 data is about research";


box1.next=box2;
box2.next=box3;
box3.next=box4;

console.log(box1.next);console.log(box2.next);console.log(box3.next);

/*7th Refactoring*/


/*8 Refactoring */
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";


box1.next=box2;
box2.next=box3;
box3.next=box4;

console.log("Next_node after box1 is:",box1.next);  
console.log("Next_node after box2 is:",box2.next);  
console.log("Node _node after box3 is:",box3.next);

story="\t\tLearn from this story. I did not know anything till I found a better tutorial\n which lead me to this .";
end="What do want to learn just watch video on it\n and keep practising and they will transform you. Happy coding !"
console.log(story,end);
/* 8 Refactoring */

/9* Refactoring code*/


/*8 Refactoring */
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 for(i=0;i<5;i++)
{ box[i];}
box1.next=box2;
box2.next=box3;
box3.next=box4;

/9* Refactoring code*/

/*10 Ananse version for fun*/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 for(i=0;i<5;i++)
{ console.log(box+`|i|`);}
/*10 Ananse version for fun */


/*11 version  for play*/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 for(i=0;i<5;i++)
{ console.log(box+`|i|`=='');}/* Output: 5x false*/ 
//
  

/*12 version fun */
class box{
data;
next;
box(data){this.data=data;};}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 /*comment display class plus `|i|` on screen*/
console.log(box+`|i|`);
/*12 version fun */



/*13 version fun */
class box{
data;
next;
box(data){this.data=data;};}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 /*comment display class plus `|xl|` on screen*/
console.log(box+`|xl|`);
/*13 version fun */

/*14 Version for game*/
/*Factorial 1*2*3...= answer;
fac=(n)=>{ if(n==0){return 1;} else {return fac(n-1)*n}}; fac(4);
/*14 Version for game*/

class box{
data;next;box=(data)=>{this.data=data;}}
box1=new box(); box1.data='Experience';console.log(box1.data);


....
/*code 15 calculating the total sum of interior angle of polygon...simple*/
/*Using n=number of side of the the ploygon,  hence formular =n-2*180*/

n=prompt("Enter number of side of the polygon");
/* perfroming calculation */
side=n;
total=(n-2)*180;
console.log("The total interior angle of polygon of  side "+side+"is "+total);



/*code 16 :Finding total numbers of node in a linked List*/
class Node {
data;
next;
Node (data){
this.data=data;}
}
 head=new Node("a");
 nodeB=new Node("b");
 nodeC=new Node("c");
 nodeD=new Node("d");






/*code 17*/

class Node { 
data;
next;
Node (data){
this.data=data;}
}; h=[]; end=10; arr=[2,3,4,5,6,7,8,7,54,3]
for(i=0;i<arr.length; i++){ h[i]=new Node(arr[i])};            
      for(i=0;i<arr.length;i++)
{h[i].data=arr[i]; console.log(h[i]);}
/*code17 */

/*code 18*/
line=['__','____','____','\/'] ;num=[1,2,4,3,5,6,7,'null','0'];                                                      
   for(i=num.length,l=1;i>0;i--)
{if(num[i]==null||num[i]==0){console.log("\/");l++};console.log(line[i]);}              
  if(l>=2){console.log("From north , move east");} 


class Node{
Node head;
Node data;
Node (para)
{ console.log(data);};}
  beta=new Node;
console.log(beta);



/*code 18*/

 men={ name:['Nana Kwame','Sam','Anasara'],gender:['Male','Female','Male'],num:['000','001','002']}  ;     console.log("Record of Customers ");                                                                                        for(i=0;i<=men.name.length-1;i++){console.log(men.name[i]+"\tGender:"+men.gender[i]+"\tid:"+men.num[i]);}
  /*code 18*/                            







/*code 19 */


update=(data)=>{

   
  console.log("Avail state:"+data);}
  
  
  
  update("as");

/*code 19*/



/*code 20 */

update=(data)=>{
 if(data===''){ 
   for(i=0;i<1;i++)
   {console.log("Avail state:"+"");}
  ;};}
  update('');  
/*code 20 */





/*code 21*/

percept=['Assin','Kenneth','Sam','Pamel']
dat=['opp']
update=(data)=>{
 if(data==''){ 
   for(i=0;i<dat.length;i++)
   {console.log("Avail state:"+percept[i]);}
  ;};
  update('');                                                                                    
/*code 21*/



 /* code 22 Template Literal `${}*`/
/*example: 	`${50/2}`;
console.log(`${50/2}`); 
//output :25//
 /*Template Literal `${}*`/

/*code 23 Template literal `${p+x}`*/
console.log(`${40+2}`)
//otuput: 42//
/*Template literal `${p+x}`*/


/*code 24 Template literal `${p-x}`*/
console.log(`${40-2}`);
//output: 38//
/*Template literal `${p-x}`*/


/*code 25 Template literal `${p*p}` */
p=5;console.log(`${p*p}`);

/*code 25 Template literal `${p*}` */

/*code 26 Template literal */
p=23;console.log(typeof`${p}`)
/*code 26 Template literal */

console.log(`${'Meshach'}`)
/*code 26 Template literal */

/*Boolean    > */
console.log(6>0)
/*Boolean  */

/* Boolean <* /
console.log(6<0);
/* Boolean */


/*Boolean <= */
console.log(78<=10)
/*Boolean */

/Boolean >= */
console.log((89>=80)
/Boolean >= */
/*Boolean */
console.log('Seen'=='seen')
console.log("They are not the same");
output:false
/*Boolean */

? Design a program which compare users word with the hidden and reward if they get it right?
word=prompt("Enter a word to win a reward")
word=(word=="x")?"Winner":"Lose";
console.log(word)

?Collection of Money and Recording?
totalRecords=prompt("Enter the total records");
userName=[];
userPrice=[];
for(i=0,p=1; i<totalRecords;i++,p++)
{
userName[i]=prompt("Enter name customer:"+p+":");
userPrice==prompt("Enter price paid:\n")



}
heading=()=>{ console.log('List of Payment Records')};

for(a=0,n=1;a<totalRecords;a++)
{ heading ();
console.log("User"+n+":"+userName[a]);
console.log("Price paid:"+":"+userName[a]);

}


? Generating each letter in the arr  form start?
passage=["dvbvdslvjbsssslllllllllldvbldvbvlvbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
vdvndsklnvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvlskbvlvkbvldsvkbdvldvnclknnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnndkvd
svlsdkvnkkkkkkkknvlkvnldvndlvkkkkkkn"];
ptot=passage[0].length;
         for(i=0;i<ptot;i++){
           console.log(i+":"+passage[0][i]);
         }
?Generating each letter in arr from last to start to finish?
passage=["dvbvdslvjbsssslllllllllldvbldvbvlvbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb      vdvndsklnvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvlskbvlvkbvldsvkbdvldvnclknnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnndkvdsvlsdkvnkkkkkkkknvlkvnldvndlvkkkkkkn"];
ptot=passage[0].length;
         for(i=ptot;i>-1;i--){
           console.log(i+":"+passage[0][i]);
         }



//code 27
 name='Zid';
 greeting="Hello";
 console.log(greeting +"!"+zid);


//code 28
 var _name="Zid";
 const $age=45;
console.log("Name:"+_name+"\nAge:"+$age);

/*output: 
Name:Zid
Age:45*/
     

//code 28 
  console.log(true? 1:6)

/*output:   1*/
 

//code 29 
console.log(false?1:0);
 
/*output: 30 Accepting anything*/
 console.log(5*null)
/*output: 0*/

/*code 30 
console.log("5"-1)
/*output: 3*/

/* code 31 
console.log("5"+1);

/*output: 51  */


/*code 32 */
console.log(`5`-1)
/*output: 4*/

/*code 33 */
console.log(`5`+1)
/*output: 51*/
/*code 34 */
console.log("password"+1);
/*output: pasword1*/


?Create program which enable learners  answer question?
authenticate=(_name,_email)=>{  
choice=prompt("Select anoption :\n 1.Show user details\n2.Skip"); 
choice=(choice==1)?
"About user:\nName: "+_name+"\nEmail:"+_email:"Message";
console.log(choice);

}
_name=prompt("Enter Name"); 
_email=prompt("Enter Email");
authenticate(_name,_email);