 //code 1[Refactoring]
input=prompt("Enter one  letter");
le=['a','b','c','d','e','f','g','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];
 for(i=0;i<26;i++)
{ bin=(le[i]==input)?1:0; console.log(bin);}
//code 2
food=['Rice and Stew','Fried plantain with pepper','Jollof and chicken']; 
for(i=0;i<food.length;i++){ console.log(i+"."+food[i]);}; price=['100','40','70'];
input=prompt("Select an option"); check=0;
for(i=0;i<food.length;i++){ check=(food[i]===food[input])?check:'false';};

//code 3
// Order food
try{food=['Rice and Stew','Fried plantain with pepper','Jollof and chicken']; 
console.log("Select an option");for(i=0;i<food.length;i++){ console.log(i+"."+food[i]);};
price=['100','40','70'];input=prompt("Select an option"); 
console.log("\t You ordered "+food[input]+"\n" +"Price: "+price[input]+" cedis\n Thanks for ordering ");} 
catch{ console.log("Error");}

// code 4 tells us whether user request is found in food list .
food=['Rice and Stew','Fried plantain with pepper','Jollof and chicken']; 
for(i=0;i<food.length;i++){ console.log(i+"."+food[i]);}; price=['100','40','70'];
input=prompt("Select an option"); check=0;console.log("My input fooling is "+input); input=parseInt(input);
for(i=0;i<food.length;i++){ console.log("Hello"+i+":");if(i==input){'True';break;} else {'false';};}

code5 food=['Rice and Stew','Fried plantain with pepper','Jollof and chicken']; 
for(i=0;i<food.length;i++){ console.log(i+"."+food[i]);}; price=['100','40','70'];
input=prompt("Select an option"); check=
0;console.log("My input fooling is "+input); input=parseInt(input);
for(i=0;i<food.length;i++){ console.log("Hello"+i+":");if(i==input){'True';console.log("Ordered food is found ");break;} else {'false';};}

//code 6 
input=prompt("Enter one  letter");
le=['a','b','c','d','e','f','g','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
 for(i=0;i<26;i++)
{ {bin=(le[i]==input)?1 :0;};console.log(bin);}


//code 7 deletion queue algorithm
arr=[2,4,5,6,7,'p'];console.log("Before deletion")
console.log(arr);
for(i=0;i<arr.length;i++)
{ arr[i]=null;};console.log("After deletion");console.log(arr); 
//==>Why print some text different from arr is that I want it in be array format meaning like this [num1,num2,...,numN]

//code 8 check isArrFull
arr=[2,4,5,6,7,'p']; arr.length=4294967295;
// check if arr is empty or full 
if(arr.length>4294967296){
console.log("Array size full");}
else{ console.log("Array not full");console.log("Happy Coding !");}


// code 9 insert a node  at  a particular  location 
NodeAddToEndOfArr=(arr,node)=>{
 //adding data at the end of Arr
  i=arr.length; /*Node extended*/
console.log(i);arr.length=node.length*i;console.log(arr.length); //enlarge arr size
 console.log(node.length);//check new length of arr passed
for(b=0;i<arr.length&b<node.length;i++,b++){arr[i]=node[b]; 
console.log(node[b]);;};console.log(arr); }
arr=[2,4,5,6,7];
node=[3,6,5,7];console.log(arr.length);
// check if arr is empty or full 
if(arr.length>4294967296){
console.log("Array size full");}
else{
 console.log("Array not full");
NodeAddToEndOfArr(arr,node);   




//code 10 Insert element in middle part of arr.
arr=[4,6,7,8,5];node=[34,5,6,3];NewArr=[];
//function declaration
addNodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2; /*Divide  arrIndex into two*/; NewArrSize=len*len*node.length;console.log(NewArrSize);NewArr[NewArr];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   { NewArr[i]=arr[i];};console.log(NewArr);if(Middle==i){console.log(len-Middle);};

}
     ;addNodeToMiddleOfArr(arr,node);//function call

/*Note if Less than Middle so JS  will not let if(Middle==i) works and show undefine but  printing outside condition produce 2.5*/

//code 11
/*initial stage*/
arr=[4,6,7,8,5];node=[34,5,6,3];NewArr=[];
//function declaration
addNodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2; /*Divide  arrIndex into two*/; NewArrSize=len*len*node.length;console.log(NewArrSize);NewArr[NewArr];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   { NewArr[i]=arr[i];if(i==Middle){console.log("Hello");};console.log(NewArr);pin=len-Middle;console.log("Number of element left to be added "+ parseInt(pin));
console.log("Node to be added are"+node);
}
addNodeToMiddleOfArr(arr,node)
/*initial stage*/

/*2nd Refactoring*/

arr=[4,6,7,8,5];node=[34,5,6,3];NewArr=[]; 
//function declaration
addNodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2;
  /*Divide  arrIndex into two*/; 
  NewArrSize=len*len*node.length;/*increasing NewArr size*/
  console.log(NewArrSize);NewArr[NewArr];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   {  NewArr[i]=arr[i];};Middle=parseInt(Middle+1); i=Middle;total=node.length+Middle;for(p=0;i<total||p<node.length;i++,p++){ NewArr[i]=node[p];};                                                                                                                                                                                                                                           ;pin=len-Middle;console.log(NewArr);
 console.log("Node to be added are"+node);
 }
 addNodeToMiddleOfArr(arr,node)
/*2nd Refactoring*/

/*3rd Refactoring */

NodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2;
  /*Divide  arrIndex into two*/; 
  NewArrSize=len*len*node.length;/*increasing NewArr size*/
  console.log(NewArrSize);NewArr.length=NewArrSize;};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   {  NewArr[i]=arr[i];};Middle=parseInt(Middle+1);
  i=Middle;total=node.length+Middle;for(p=0;i<total||p<node.length;i++,p++)
   { NewArr[i]=node[p];};                          
   middle=parseInt((len/2)+1); 
   newTotal=middle+total;
  for(i;i<newTotal&&middle<(len);middle++,i++){NewArr[i]=arr[middle];console.log(NewArr[i]);}
   ;pin=len-Middle;console.log(NewArr);console.log("New Arr"+NewArr.length);
 console.log("Node to be added are"+node);
 }
 addNodeToMiddleOfArr(arr,node)
/*3Refactoring 

/*4 Refactoring*/
NodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2;
  /*Divide  arrIndex into two*/; 
  NewArrSize=len*len*node.length;/*increasing NewArr size*/
  console.log(NewArrSize);NewArr[NewArrSize];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   {  NewArr[i]=arr[i];};Middle=parseInt(Middle+1);
  i=Middle;total=node.length+Middle;for(p=0;i<total||p<node.length;i++,p++)
   { NewArr[i]=node[p];};                          
   middle=parseInt((len/2)+1); 
   newTotal=middle+total;
  for(i;i<newTotal&&middle<(len);middle++,i++){NewArr[i]=arr[middle];console.log(NewArr[i]);}
   ;pin=len-Middle;console.log(NewArr);console.log("New Arr"+NewArr.length);
 console.log("Node to be added are"+node);
 }
 addNodeToMiddleOfArr(arr,node)
/*4 Refactoring */

// code 12 total count while is incrementing;
count=1; total=0;
while(count<10)
{
  total+=count;
  count+=1


};
console.log(total);



//code 13  totaling
count=1 ;total =0;
while(count<=10){total+=count; count+=4;}
console.log(total);


//code 14
//code 13  totaling
count=1 ;total =0;
while(count<=10)
{console.log("Number count before cal"+count);total+=count; count+=8;}
console.log(total);

//code 15


arr=[4,6,7,8,5];node=[34,5,6,3];NewArr=[]; 
//function declaration
addNodeToMiddleOfArr=(arr,node)=>
{
  len=arr.length;Middle=0;NewArrSize=0;
  if(len!=null){  Middle=len/2;
  /*Divide  arrIndex into two*/; 
  NewArrSize=len*len*node.length;/*increasing NewArr size*/
  console.log(NewArrSize);NewArr[NewArr];};
  /*add element of arr to NewArrSize when is greater than Middle append node  berfore the rest of arr element*/ 
  for(i=0;i<Middle;i++)
   {  NewArr[i]=arr[i];};Middle=parseInt(Middle+1);
  i=Middle;total=node.length+Middle;for(p=0;i<total||p<node.length;i++,p++)
   { NewArr[i]=node[p];};                          
   middle=parseInt((len/2)+1); 
   newTotal=middle+total;
  for(i;i<newTotal||middle<len;newTotal++,i++){NewArr[i]=arr[middle];}
   ;pin=len-Middle;console.log(NewArr);
 console.log("Node to be added are"+node);
 }
 addNodeToMiddleOfArr(arr,node) 

//code 16
Natural Language for GraphGenerator :[Take a set of array and  pass through method or function to generate graph]
1. Declare arr and assign element and corresponding values ;
2. GraphGenerator(arr){
method or function generate for each element : name,corresponding graph ,percentage and make professional judgment
}
3. Display all info on screen for user  to see.


//code 16
/*1st Refactoring*/
a=[];b=[]
for(i=0,p=0;i<5;p++,i++)
{
a[p]=i;
b[p]=p

}
if(i==p++)
{ a[p]=b;}
console.log(a);

/*comment : in array 'a' why is a part empty because p is incremented hence one value is skip before the last element is added.*/

/*2nd Refactoring*/
a=[];b=[]

for(i=0,p=0;i<5;p++,i++)
{
a[p]=i;
b[p]=p

}
if(i==p)
{ a[p++]=b;}console.log(a);console.log(a.length);
;for(i=0;i<a.length;i++){console.log(a[i])};

//Code 17 Linked list 
/*1st refactoring*/
class box{
 data;//declaration
 next;//another declaration 
box=(data)=>{this.data=data;}
}
;
boxA=new box(4);
boxB=new box(1);
boxC=new box(2);
/*1st refactoring*/
/*2nd Refactoring*/
class box{
 data;//declaration
 next;//another declaration 
box=(data)=>{this.data=data;}
}
;
/*display same result*/
boxA=new box(4);// 

/*2nd Refactoring */

/*3nd Refactoring*/
class box{
 data;//declaration
 next;//another declaration 
box=(data)=>{this.data=data;}
}
;
/*display same result*/
boxA=new box();

/*3nd Refactoring */

/4th Refactoring */
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();box2.data="Solve more problem";
/*comment:if data and next variable which not assigned for box1 will have undefined*/
console.log("Box1 data is "+box1.data);
console.log("Box2 next  is "+box.next); 

/*After assigning the undefined goes away with now tho the values showing */
box1.data=4;
box1.next="Hmm"+box2;
console.log("box1 data is:"+box1.data);
console.log("Next as is"+box1.next)
/*4 th Refactoring*/
/5th Refactoring*/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
/*comment:if data and next variable which not assigned for box1 will have undefined*/  console.log("1.Before Assignment");
console.log("Box1 data is "+box1.data);
console.log("Box1 next  is "+box1.next); 

/*After assigning the undefined goes away with now tho the values showing */ console.log("2.After Assignment");
box1.data=4;
box1.next=box2;
console.log("box1 data is:"+box1.data);console.log("Box1 next is");
console.log(box1.next)
/*5th Refactoring */
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

box1.next=box2;
box2.next=box3;
box3.next=box4;

console.log(box3.next)


/*5Refactoring*/
/6th Refactoring*/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

box1.next=box2;
box2.next=box3;
box3.next=box4;
console.log("box1 next is") ;console.log(box1.next);
console.log("box3 next is");console.log(box3.next);
/*6th Refactoring*/


/*7 th refactoring/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();
/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is about movie";
box3.data="Box3 data is about Business";
box4.data="Box4 data is about research";


box1.next=box2;
box2.next=box3;
box3.next=box4;

console.log(box1.next);console.log(box2.next);console.log(box3.next);

/*7th Refactoring*/


/*8 Refactoring */
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";


box1.next=box2;
box2.next=box3;
box3.next=box4;

console.log("Next_node after box1 is:",box1.next);  
console.log("Next_node after box2 is:",box2.next);  
console.log("Node _node after box3 is:",box3.next);

story="\t\tLearn from this story. I did not know anything till I found a better tutorial\n which lead me to this .";
end="What do want to learn just watch video on it\n and keep practising and they will transform you. Happy coding !"
console.log(story,end);
/* 8 Refactoring */

/9* Refactoring code*/


/*8 Refactoring */
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 for(i=0;i<5;i++)
{ box[i];}
box1.next=box2;
box2.next=box3;
box3.next=box4;

/9* Refactoring code*/

/*10 Ananse version for fun*/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 for(i=0;i<5;i++)
{ console.log(box+`|i|`);}
/*10 Ananse version for fun */


/*11 version  for play*/
class box{
data;
next;
box(data){this.data=data;}
}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 for(i=0;i<5;i++)
{ console.log(box+`|i|`=='');}/* Output: 5x false*/ 
//
  

/*12 version fun */
class box{
data;
next;
box(data){this.data=data;};}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 /*comment display class plus `|i|` on screen*/
console.log(box+`|i|`);
/*12 version fun */



/*13 version fun */
class box{
data;
next;
box(data){this.data=data;};}
box1=new box();
box2=new box();
box3=new box();
box4=new box();

/*assignment for each data for specicfic box*/
box1.data="Box1 data is about story";
box2.data="Box2 data is after box1";
box3.data="Box3 data is  after box2";
box4.data="Box4 data is after box3";
 /*comment display class plus `|xl|` on screen*/
console.log(box+`|xl|`);
/*13 version fun */

/*14 Version for game*/
/*Factorial 1*2*3...= answer;
fac=(n)=>{ if(n==0){return 1;} else {return fac(n-1)*n}}; fac(4);
/*14 Version for game*/

class box{
data;next;box=(data)=>{this.data=data;}}
box1=new box(); box1.data='Experience';console.log(box1.data);


....
/*code 15 calculating the total sum of interior angle of polygon...simple*/
/*Using n=number of side of the the ploygon,  hence formular =n-2*180*/

n=prompt("Enter number of side of the polygon");
/* perfroming calculation */
side=n;
total=(n-2)*180;
console.log("The total interior angle of polygon of  side "+side+"is "+total);



/*code 16 :Finding total numbers of node in a linked List*/
class Node {
data;
next;
Node (data){
this.data=data;}
}
 head=new Node("a");
 nodeB=new Node("b");
 nodeC=new Node("c");
 nodeD=new Node("d");






/*code 17*/

class Node { 
data;
next;
Node (data){
this.data=data;}
}; h=[]; end=10; arr=[2,3,4,5,6,7,8,7,54,3]
for(i=0;i<arr.length; i++){ h[i]=new Node(arr[i])};            
      for(i=0;i<arr.length;i++)
{h[i].data=arr[i]; console.log(h[i]);}
/*code17 */

/*code 18*/
line=['__','____','____','\/'] ;num=[1,2,4,3,5,6,7,'null','0'];                                                      
   for(i=num.length,l=1;i>0;i--)
{if(num[i]==null||num[i]==0){console.log("\/");l++};console.log(line[i]);}              
  if(l>=2){console.log("From north , move east");} 


class Node{
Node head;
Node data;
Node (para)
{ console.log(data);};}
  beta=new Node;
console.log(beta);



/*code 18*/

 men={ name:['Nana Kwame','Sam','Anasara'],gender:['Male','Female','Male'],num:['000','001','002']}  ;     console.log("Record of Customers ");                                                                                        for(i=0;i<=men.name.length-1;i++){console.log(men.name[i]+"\tGender:"+men.gender[i]+"\tid:"+men.num[i]);}
  /*code 18*/                            







/*code 19 */


update=(data)=>{

   
  console.log("Avail state:"+data);}
  
  
  
  update("as");

/*code 19*/



/*code 20 */

update=(data)=>{
 if(data===''){ 
   for(i=0;i<1;i++)
   {console.log("Avail state:"+"");}
  ;};}
  update('');  
/*code 20 */





/*code 21*/

percept=['Assin','Kenneth','Sam','Pamel']
dat=['opp']
update=(data)=>{
 if(data==''){ 
   for(i=0;i<dat.length;i++)
   {console.log("Avail state:"+percept[i]);}
  ;};
  update('');                                                                                    
/*code 21*/



 /* code 22 Template Literal `${}*`/
/*example: 	`${50/2}`;
console.log(`${50/2}`); 
//output :25//
 /*Template Literal `${}*`/

/*code 23 Template literal `${p+x}`*/
console.log(`${40+2}`)
//otuput: 42//
/*Template literal `${p+x}`*/


/*code 24 Template literal `${p-x}`*/
console.log(`${40-2}`);
//output: 38//
/*Template literal `${p-x}`*/


/*code 25 Template literal `${p*p}` */
p=5;console.log(`${p*p}`);

/*code 25 Template literal `${p*}` */

/*code 26 Template literal */
p=23;console.log(typeof`${p}`)
/*code 26 Template literal */

console.log(`${'Meshach'}`)
/*code 26 Template literal */

/*Boolean    > */
console.log(6>0)
/*Boolean  */

/* Boolean <* /
console.log(6<0);
/* Boolean */


/*Boolean <= */
console.log(78<=10)
/*Boolean */

/Boolean >= */
console.log((89>=80)
/Boolean >= */
/*Boolean */
console.log('Seen'=='seen')
console.log("They are not the same");
output:false
/*Boolean */

? Design a program which compare users word with the hidden and reward if they get it right?
word=prompt("Enter a word to win a reward")
word=(word=="x")?"Winner":"Lose";
console.log(word)

?Collection of Money and Recording?
totalRecords=prompt("Enter the total records");
userName=[];
userPrice=[];
for(i=0,p=1; i<totalRecords;i++,p++)
{
userName[i]=prompt("Enter name customer:"+p+":");
userPrice==prompt("Enter price paid:\n");



}
heading=()=>{ console.log('List of Payment Records');};gap=()=>{console.log("\n");};
heading ();
for(a=0,n=1;a<totalRecords;a++)
{  
console.log("User"+n+":"+userName[a]);
console.log("Price paid:"+":"+userName[a]);gap();
n++;
}


? Generating each letter in the arr  form start?
passage=["dvbvdslvjbsssslllllllllldvbldvbvlvbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
vdvndsklnvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvlskbvlvkbvldsvkbdvldvnclknnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnndkvd
svlsdkvnkkkkkkkknvlkvnldvndlvkkkkkkn"];
ptot=passage[0].length;
         for(i=0;i<ptot;i++){
           console.log(i+":"+passage[0][i]);
         }
?Generating each letter in arr from last to start to finish?
passage=["dvbvdslvjbsssslllllllllldvbldvbvlvbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb      vdvndsklnvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvlskbvlvkbvldsvkbdvldvnclknnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnndkvdsvlsdkvnkkkkkkkknvlkvnldvndlvkkkkkkn"];
ptot=passage[0].length;
         for(i=ptot;i>-1;i--){
           console.log(i+":"+passage[0][i]);
         }



//code 27
 name='Zid';
 greeting="Hello";
 console.log(greeting +"!"+zid);


//code 28
 var _name="Zid";
 const $age=45;
console.log("Name:"+_name+"\nAge:"+$age);

/*output: 
Name:Zid
Age:45*/
     

//code 28 
  console.log(true? 1:6)

/*output:   1*/
 

//code 29 
console.log(false?1:0);
 
/*output: 30 Accepting anything*/
 console.log(5*null)
/*output: 0*/

/*code 30 
console.log("5"-1)
/*output: 3*/

/* code 31 
console.log("5"+1);

/*output: 51  */


/*code 32 */
console.log(`5`-1)
/*output: 4*/

/*code 33 */
console.log(`5`+1)
/*output: 51*/
/*code 34 */
console.log("password"+1);
/*output: pasword1*/


?Create program which enable learners  answer question?
authenticate=(_name,_email)=>{  
choice=prompt("Select anoption :\n 1.Show user details\n2.Skip"); 
choice=(choice==1)?hand():"Message";
//console.log(choice);


}
_name=prompt("Enter Name"); 
_email=prompt("Enter Email");
authenticate(_name,_email);

function hand(){
  console.log("Name: "+_name+"\nEmail: "+_email);
    option=prompt("Select an Option \n1.Start Test \n2.Read");
  if(option==1)
  { 

Q=["Convert 1000 in binary  form to decimal form","Binary number is made of up of how many number","Convert 1000 to hexadecimal"];
;A=[8,2,8];
 learner=[];    score=0
; correct=[];incorrect=[];
 console.log(" Hands On  Examination \n--------------------\nMore test . More Experience... \nSubject :Programming Fundamentals \nSolve all question by providing only your answer")
    ;
  for(i=0,P=1;i<Q.length||P<Q.length-1;i++,P++)
    {console.log(Q[i]); learner[i]=prompt("Respond to Question"+P);console.log(learner[i]);
     if(A[i]==learner[i]){correct[i]='correct'; score++}
     else{incorrect[i]='Incorrect';}
    
    if (i==Q.length-1){  
  console.log("\nName:"+_name+"\nEmail:"+_email+"\nScore :"+score+"  out of "+Q.length
);   
  ;}
    
    else {};}
    }
 
  else{console.log("Mask");}
}


/Removing data from arr code
//code 36
q=[2,3,4,5,6,6];
console.log("The main length of q arr"+q.length);
for(i=q.length-1;i>=0;i--)
{console.log(q.pop(-1));
console.log(q)
console.log("Length of aarr"+q.length)

}
if(q==""){console.log(" Array is ");}



<<<<<<< HEAD

/code 37
square=function(x){ return x*x;}
square(2);
console.log(square(2));



/code 38 
makeNoise=function(){console.log("Boom!");}
makeNoise();


using function write code which calculate the a number raised to any power or exponent

cal=function(base,power)
{ outcome=1;
for(start=0;start<power;start++)
{ outcome*=base;};
 return "Answer :"+
outcome;
}
;

console.log(cal(3,4));
cal(4,6);
/*output: Answer : 81
  'Answer :4096';
/*alternative to cal */
cal=function(base,power){ console.log(base**power);};
cal(4,3);

?* Giving user ability to do calculation of base and power*?
 
cal=(base,power)=>{console.log("Answer is:"+base**power);}
console.log(" Calculation on indices");
base=prompt("Enter base. ");
power=prompt("Enter power.");
cal(base,power);
/Refactoring cal code */
cal=(b,p)=>{console.log("Answer is:"+b**p);}
console.log(" Calculation on indices");
base=prompt("Enter base. ");
power=prompt("Enter power.");
cal(base,power)
/*Creating pomodoro shape*/
pomodoro=function(){for(i=0;i<20;)
{ 
if(i==4)
{
for(j=i;j<10;j++)
{
console.log("-------------")
;}
;};
  if(i==11)
{
for(j=i;j<15;j++)
{ gap="    ";console.log(gap+"----");}
;}
 ;  if(i==15)
{
for(j=i;j<20;j++)
{console.log("------------");}
;}
   
  ;i++
};
 }; pomodoro();


/code  :
/*Display a shape*/
miniShape=function (){
for(i=1;i<=3;)
{ if(i==1){console.log("----------");}
  else if(i==2){gap="    ";console.log(gap+"---");}
  else {console.log("----------");};
 i++;
}
;}

miniShape()

?Printing from 1 to 100 except numbers divisible by two and for number divisible by 3 print or display 'Fuzz'?
for(i=0;i<=100;i++)
{  if(i%2!==0)
  { 
      if(i%3===0)
        {  if(i%3===0||i%5===0)
                {console.log("FizzBuzz");};
                console.log("Fuzz");
                }
   
     else{
          if(i%5===0){ 
                  if(i%3===0||i%5===0)
                   {console.log("FizzBuzz");};
                    console.log("Buzz");
                   }

          else{  console.log(i);}
         }

  };

}

?Chess game reation*?
p='x';ga="  ";diagram=p+ga+p+ga+p+ga+p;                        
for(z=1;z<=8;z++)
{                                        
                                                           
    if(z%2!==0)                                                   
    { console.log("  "+diagram);}
    else { ;console.log(diagram);}     ;
}
/*Some control on a chess game*/
p='x';ga="  "; 
each=p+ga+p+ga+p+ga+p; /*contain 4 x's and can be used to form the whole diagram .*/
size=prompt("Enter size of chess") ;console.log("Play Chess!");                                                                                        for(z=1,b=1;z<=size;z++,b++){                                        
  ;                                                         
 if(z%2!==0)                                                   
 { console.log("  "+b+each);}
   else { console.log(b+each);}     ;}
?ability of user to change width and length of chess board?
/*code z stage*/
 var collectAll='';;width=(input)=>{    gap=" ";shape='X';
                   if(input>0) 
                   {
                   do{  collectAll+=shape;input--}while(input>=0) ;
                   console.log(collectAll);
                   } 
              };
input=prompt("Enter width of chess game");
width(input-1);

/*code y stage */
 collectAll='';;
/*width function begins*/
width=(input)=>{    gap=" ";shape='X';
                   if(input>0) /*any number from 1 up to infinity depends on your choice .*/
                   {
                   do{  collectAll+=shape;input--}while(input>=0) ;
                   return collectAll;
                   } 
              };
/*End the the width function */


input=prompt("Enter width of chess game");/*collect input  for the width function*/
width(input-1);/*Since the input will work in do while loop we decrement by one */


/*combining zand y  for us we get x stage*/
collectAll='';;width=(input)=>{    gap=" ";shape='X';
                   if(input>0) 
                   {
                   do{  collectAll+=gap+shape;input--}while(input>=0) ;
                   return collectAll;
                   } 
              };

input=prompt("Enter width of chess game");
each=width(input-1);/each variable take up user requirement using width function and display it on each line.*/
;/*p='x';ga="  "; 
each=p+ga+p+ga+p+ga+p; */ /*contain 4 x's and can be used to form the whole diagram .*/
size=prompt("Enter size of chess") ;console.log("Play Chess!");                                                                                        for(z=1,b=1;z<=size;z++,b++){                                        
  ;                                                         
 if(z%2!==0)                                                   
 { console.log("  "+b+each);}
   else { console.log(b+each);}     ;}


/*More function renovation/*
square =function (num){ return "Answer:"+ num*num;};
square(8);
/*Giving user ability to type choice of numbers in square a number*/
square =function (num){ return "Answer:"+ num*num;}
user_data=prompt("Calculate square of any number.\r\b\bEnter a number and get an answer.");
square(user_data);

/*code make noise function is like an alarm*/
makeNoise =function(){console.log("Boom");}
makeNoise();

/*Notify us when visitor are in the house*/
notify_me=function(){return " Visitor[s] entered the house";}
notify_me();

/*Alert alarm for police and ambulance*/
carAlarm=function()
{ console.log("Wawoo!");}
carAlarm();
/*User can given the sound for carAlarm to make*/
carAlarm=function(fromUser)
{ console.log(fromUser+"!");}
;fromUser=prompt("Enter a sound for the car alarm");
carAlarm(fromUser)



/*power function: calculate any number raise to any power*/
power=function(base,power){ soln=1;
         for( ;power>-1;power--)
         {  soln*=base;

 	   }
          return soln;
                   
                      	  };
console.log("Calculating any number raised to positive power");
 power(2,3);

/*User can add their choice of number to program or user can add thier bit!*/

 power_cal=function(base,power){ 
          let soln=1;
         for( ;power>-1;power--)
         { soln*=base;

 	   }
          return soln;
                   
                      	  };
console.log("Calculation of any number raised to a positive number");
 
var base,power;/*declaring variable or binding*/

/*data collecting using the declared variable declared above.*/
 base=prompt("Enter the base for calculation.");
 power==prompt("Enter the power for calculation.");
 
/*invoking or calling power_cal [a function] and passing parameter or  argument base and power through it*/
power_cal(base,power);




/*Refactoring the error from power_cal,It has some issues - found them and resolve them. Positive power can only work*/

 /*power_cal=function(base,power){ 
          soln=1;
         for( ;power>-1;power++)
         { soln*=base;
          console.log(soln);
 	   }
          return soln;
                   
                      	  };
NB : Never increment  or decrement the needed number [which alt to remain stagnant ]when is compared with a number  */
power_cal=function(base,power){ 
          soln=1;
         for(bstart=0 ;power>bstart;bstart++)
         { soln*=base;
          console.log(soln);
 	   }
          return soln;
                   
                      	  };
console.log("Calculation of any number raised to a positive number");
 
var base,power;/*declaring variable or binding*/

/*data collecting using the declared variable declared above.*/
 base=prompt("Enter the base for calculation.");
 power=prompt("Enter the power for calculation.");
 
/*invoking or calling power_cal [a function] and passing parameter or  argument base and power through it*/
power_cal(base,power);

 

/*Refactoring code power_cal function accept both negative and positive powers*/

power_cal=function(base,power){ 
          soln=1;x=-1*power
         if( (power/1)===x)
            { for(bstart=0 ;power>bstart;bstart++)
             { soln*=base;
                console.log(soln);
 	       };
            ;}
         else
         { x ;console.log(x);
            for(bstart=0 ;x>bstart;bstart++)
             { soln/=base;
                console.log(soln);
 	       ;};
          }
           return soln;
                   
                      	  };
console.log("Calculation of any number raised to a positive number");
 
var base,power;/*declaring variable or binding*/

/*data collecting using the declared variable declared above.*/
 base=prompt("Enter the base for calculation.");
 power=prompt("Enter the power for calculation.");
 
/*invoking or calling power_cal [a function] and passing parameter or  argument base and power through it*/
power_cal(base,power);



/*Coding to verify gobal and local binding*?
let x=9;
if(true){ let s=2; var d=3;  console.log(x+s+d);};
/*console.log(x+s); ===> :generate error why because s is defined with let and is a braces or parentheses hence local binding are not visible outside braces./;
console.log(x+d);/* this side work even though is braces but we said if var is not in a function then is visible to all.*/


/*Similar variable or bindings*/
const halve=function(n){return "Answer:"+n/2;}
let n=7;
console.log(halve(n));


/*Nesting function : puting one function in another!*/
const improveSalary=function(increment)
{
    const salary=function(rate,time,name)
    {  let amount=increment*rate*time;
       console.log("Ananse E-commmerce Company\nCustomer Records:");
    console.log(`${'Name :'+name} \n ${'Amount paid :'+amount}`);
    }
   salary(2,3,'Nam');
  


}

;
improveSalary(2);



/*Code enhancement for improveSalary now called salary_Increment*/
const salary_Increment=function(increment)
{
    const salary=function(rate,time,name)
    {  let amount=increment*rate*time;        
     ; console.log(`${"Name:Mr."+name}${"\nAmount for  your salary is:Ghc"+amount+".oo"}`);                 
    }
  
    
   salary(2,3,'Nam');
  


}

;
salary_Increment(3);

/Buy a ticket be part of the program and win more product terms and condition exit*/
ticket=function(free_reduction){               
                benefit=function(name,location,phone_number,amount) {                                     
                                                                  
             result=free_reduction*amount;                                                                                            console.log(result+"You purchased ticket successfully!\n" +"You have won a nice notebook and airtime of ghc "+(amount-result-25));        
                 ;}
               ;   

           benefit("Meshach","Boko",0541478368,100);
;return "";
}

ticket(0.7);
ticket(0.62);


/*Refactoring the ticket function so users can input data*/
ticket=function(free_reduction){               
        benefit=function(name,location,free_reduction,phone_number,amount) {                                     
                                                                  
             result=free_reduction*amount;                                                                                                console.log(result+"You purchased ticket successfully!\n" +"You have won a nice notebook and airtime of ghc "+(amount-result-25));}        
                 ;      
                name=prompt("Enter name");
                location=prompt("Enter location or digital address");
                amount=100;        

                benefit(name,location,amount);
;return "";
                              
                              }

ticket(0.7);



/*Refactoring ticket*/
ticket=function(free_reduction){               
        benefit=function(name,location,free_reduction,phone_number,amount) {                                     
                                                                  
             result=free_reduction*amount;                                                                                                    console.log(result+"You purchased ticket successfully!\n" +
"You have won a nice notebook and airtime of ghc "+(amount-result-25));}        
                 ;      
                name=prompt("Enter name");
                location=prompt("Enter location or digital address");
                amount=100;        

                benefit(name,location,free_reduction,phone_number,amount);
;return "";
                              
                              }

ticket(0.7);

/Removing data from arr code
//code 36
q=[2,3,4,5,6,6];
console.log("The main length of q arr"+q.length);
for(i=q.length-1;i>=0;i--)
{console.log(q.pop(-1));
console.log(q)
console.log("Length of aarr"+q.length)

}
if(q==""){console.log(" Array is ");}




/code 37
square=function(x){ return x*x;}
square(2);
console.log(square(2));



/code 38 
makeNoise=function(){console.log("Boom!");}
makeNoise();


using function write code which calculate the a number raised to any power or exponent

cal=function(base,power)
{ outcome=1;
for(start=0;start<power;start++)
{ outcome*=base;};
 return "Answer :"+
outcome;
}
;

console.log(cal(3,4));
cal(4,6);
/*output: Answer : 81
  'Answer :4096';
/*alternative to cal */
cal=function(base,power){ console.log(base**power);};
cal(4,3);

?* Giving user ability to do calculation of base and power*?
 
cal=(base,power)=>{console.log("Answer is:"+base**power);}
console.log(" Calculation on indices");
base=prompt("Enter base. ");
power=prompt("Enter power.");
cal(base,power);
/Refactoring cal code */
cal=(b,p)=>{console.log("Answer is:"+b**p);}
console.log(" Calculation on indices");
base=prompt("Enter base. ");
power=prompt("Enter power.");
cal(base,power)
/*Creating pomodoro shape*/
pomodoro=function(){for(i=0;i<20;)
{ 
if(i==4)
{
for(j=i;j<10;j++)
{
console.log("-------------")
;}
;};
  if(i==11)
{
for(j=i;j<15;j++)
{ gap="    ";console.log(gap+"----");}
;}
 ;  if(i==15)
{
for(j=i;j<20;j++)
{console.log("------------");}
;}
   
  ;i++
};
 }; pomodoro();


/code  :
/*Display a shape*/
miniShape=function (){
for(i=1;i<=3;)
{ if(i==1){console.log("----------");}
  else if(i==2){gap="    ";console.log(gap+"---");}
  else {console.log("----------");};
 i++;
}
;}

miniShape()

?Printing from 1 to 100 except numbers divisible by two and for number divisible by 3 print or display 'Fuzz'?
for(i=0;i<=100;i++)
{  if(i%2!==0)
  { 
      if(i%3===0)
        {  if(i%3===0||i%5===0)
                {console.log("FizzBuzz");};
                console.log("Fuzz");
                }
   
     else{
          if(i%5===0){ 
                  if(i%3===0||i%5===0)
                   {console.log("FizzBuzz");};
                    console.log("Buzz");
                   }

          else{  console.log(i);}
         }

  };

}

?Chess game reation*?
p='x';ga="  ";diagram=p+ga+p+ga+p+ga+p;                        
for(z=1;z<=8;z++)
{                                        
                                                           
    if(z%2!==0)                                                   
    { console.log("  "+diagram);}
    else { ;console.log(diagram);}     ;
}
/*Some control on a chess game*/
p='x';ga="  "; 
each=p+ga+p+ga+p+ga+p; /*contain 4 x's and can be used to form the whole diagram .*/
size=prompt("Enter size of chess") ;console.log("Play Chess!");                                                                                        for(z=1,b=1;z<=size;z++,b++){                                        
  ;                                                         
 if(z%2!==0)                                                   
 { console.log("  "+b+each);}
   else { console.log(b+each);}     ;}
?ability of user to change width and length of chess board?
/*code z stage*/
 var collectAll='';;width=(input)=>{    gap=" ";shape='X';
                   if(input>0) 
                   {
                   do{  collectAll+=shape;input--}while(input>=0) ;
                   console.log(collectAll);
                   } 
              };
input=prompt("Enter width of chess game");
width(input-1);

/*code y stage */
 collectAll='';;
/*width function begins*/
width=(input)=>{    gap=" ";shape='X';
                   if(input>0) /*any number from 1 up to infinity depends on your choice .*/
                   {
                   do{  collectAll+=shape;input--}while(input>=0) ;
                   return collectAll;
                   } 
              };
/*End the the width function */


input=prompt("Enter width of chess game");/*collect input  for the width function*/
width(input-1);/*Since the input will work in do while loop we decrement by one */


/*combining zand y  for us we get x stage*/
collectAll='';;width=(input)=>{    gap=" ";shape='X';
                   if(input>0) 
                   {
                   do{  collectAll+=gap+shape;input--}while(input>=0) ;
                   return collectAll;
                   } 
              };

input=prompt("Enter width of chess game");
each=width(input-1);/each variable take up user requirement using width function and display it on each line.*/
;/*p='x';ga="  "; 
each=p+ga+p+ga+p+ga+p; */ /*contain 4 x's and can be used to form the whole diagram .*/
size=prompt("Enter size of chess") ;console.log("Play Chess!");                                                                                        for(z=1,b=1;z<=size;z++,b++){                                        
  ;                                                         
 if(z%2!==0)                                                   
 { console.log("  "+b+each);}
   else { console.log(b+each);}     ;}


/*More function renovation/*
square =function (num){ return "Answer:"+ num*num;};
square(8);
/*Giving user ability to type choice of numbers in square a number*/
square =function (num){ return "Answer:"+ num*num;}
user_data=prompt("Calculate square of any number.\r\b\bEnter a number and get an answer.");
square(user_data);

/*code make noise function is like an alarm*/
makeNoise =function(){console.log("Boom");}
makeNoise();

/*Notify us when visitor are in the house*/
notify_me=function(){return " Visitor[s] entered the house";}
notify_me();

/*Alert alarm for police and ambulance*/
carAlarm=function()
{ console.log("Wawoo!");}
carAlarm();
/*User can given the sound for carAlarm to make*/
carAlarm=function(fromUser)
{ console.log(fromUser+"!");}
;fromUser=prompt("Enter a sound for the car alarm");
carAlarm(fromUser)



/*power function: calculate any number raise to any power*/
power=function(base,power){ soln=1;
         for( ;power>-1;power--)
         {  soln*=base;

 	   }
          return soln;
                   
                      	  };
console.log("Calculating any number raised to positive power");
 power(2,3);

/*User can add their choice of number to program or user can add thier bit!*/

 power_cal=function(base,power){ 
          let soln=1;
         for( ;power>-1;power--)
         { soln*=base;

 	   }
          return soln;
                   
                      	  };
console.log("Calculation of any number raised to a positive number");
 
var base,power;/*declaring variable or binding*/

/*data collecting using the declared variable declared above.*/
 base=prompt("Enter the base for calculation.");
 power==prompt("Enter the power for calculation.");
 
/*invoking or calling power_cal [a function] and passing parameter or  argument base and power through it*/
power_cal(base,power);




/*Refactoring the error from power_cal,It has some issues - found them and resolve them. Positive power can only work*/

 /*power_cal=function(base,power){ 
          soln=1;
         for( ;power>-1;power++)
         { soln*=base;
          console.log(soln);
 	   }
          return soln;
                   
                      	  };
NB : Never increment  or decrement the needed number [which alt to remain stagnant ]when is compared with a number  */
power_cal=function(base,power){ 
          soln=1;
         for(bstart=0 ;power>bstart;bstart++)
         { soln*=base;
          console.log(soln);
 	   }
          return soln;
                   
                      	  };
console.log("Calculation of any number raised to a positive number");
 
var base,power;/*declaring variable or binding*/

/*data collecting using the declared variable declared above.*/
 base=prompt("Enter the base for calculation.");
 power=prompt("Enter the power for calculation.");
 
/*invoking or calling power_cal [a function] and passing parameter or  argument base and power through it*/
power_cal(base,power);

 

/*Refactoring code power_cal function accept both negative and positive powers*/

power_cal=function(base,power){ 
          soln=1;x=-1*power
         if( (power/1)===x)
            { for(bstart=0 ;power>bstart;bstart++)
             { soln*=base;
                console.log(soln);
 	       };
            ;}
         else
         { x ;console.log(x);
            for(bstart=0 ;x>bstart;bstart++)
             { soln/=base;
                console.log(soln);
 	       ;};
          }
           return soln;
                   
                      	  };
console.log("Calculation of any number raised to a positive number");
 
var base,power;/*declaring variable or binding*/

/*data collecting using the declared variable declared above.*/
 base=prompt("Enter the base for calculation.");
 power=prompt("Enter the power for calculation.");
 
/*invoking or calling power_cal [a function] and passing parameter or  argument base and power through it*/
power_cal(base,power);


/**Giving user owner the arge to add input*/
salary=function(rate,productivity)
{ let year=2023;
  getSalary=function(time)
  { let totalAmt=rate*time*productivity;
  console.log(totalAmt+"ghana cedis");
  }
 
     if(year===2023){ getSalary(5);}
}
   
  
   rate=prompt("Enter the rate for this year");
  productivity=prompt("Enter the productivity level for this year");
 salary(rate,productivity);


Values assign to function is like any other variable it can be kept constant or not .If is not constant it any thing can be assign to it.

/*code*/
tempRise=function(){ temperature.launch("Now");};                                                                                 if("safe"){tempRise=function(){/*Do not raise temperature maintain it*/;} ;}
                                        
 /*refactoring code without in built function launch [Note it will work]*/
tempRise=function(){ temperature.launch("Now");};                                                                                 if("safe"){tempRise=function(){/*Do not raise temperature maintain it*/;} ;}

  /*code */ 
function sayHello(){ return "Hello";}
    console.log(sayHello()+" Priscilla");

/*Code:Future code */
 console.log("Future says\""+future()+"\"");
  function future(){ return "It is bright";}
                              
/* 
Note: the future code works but please note the first part which is console.log code will start displaying 
"Future says"  and later call or invoke function future() from beneath and display it. function declaration does not follow top-to-down approach  but works no matter whether the function is below or some where it can still call it and display them.
The preceding code works, even though the function is defined below the code that uses it. Function declarations are not part of the regular top-to-bottom
flow of control. They are conceptually moved to the top of their scope and can be used by all the code in that scope. This is sometimes useful because it offers
the freedom to order code in a way that seems meaningful, without worrying
about having to define all functions before they are used.

*/

Arrow function :
eg 
vin=()=>{return 'Hi';}
;vin();

/*using parameter in arrow function*/
visa=(name)=>{return "Welcome! "+name+" has a visa .Thank you.";};
visa();
/*Output: Welcome! undefined has visa.Thank you.


/*Code refactoring let's correct visa code above.*/
visa=(name)=>{return "Welcome! "+name+" has a visa .Thank you.";};
visa('Meshach'); 



/*Eliminating braces in arrow function:
eg 
code :*/
visa=name=>"Hello!"+name;
  visa('Meshach');

/*No curly bracket, no word 'return' should be added.*/
/*Yes curly bracket, Yes word 'return' should be added.*/

send=(pin)=>{return "It is sent.";};
send("QP7");

/*If no parameter is given to function please keep the parentheses  and curly brackets.
eg:
save=()=>{return "Saved!";};
save();


/*User can keep their records*/
record=(name,location,orders)=>{
   console.log("Client is nice to have you here!");
rate=5;/*Each bag cost  5 in cedis*/
Price_of_order=order*rate;
console.log("Order is a success"+"\n Details:\nName :"+name+"\nOrder Price:"+Price_of_order+" cedis");

};

name=prompt("Enter your name .");
locate=prompt("Enter your location or digital address");
order=prompt("How bags of salt are you buying");
 /*calling records function*/
record(name,locate,order)

/*Call stack*/
function calls :[Records of where the program begun must be recorded and where it continue from must be known.]


/*Code */

function call(who){
console.log("Calling..."+who);}
 
call("Handsome");
console.log("***");

/*A function must know where it was called and keep that context at the time it called and  stores the context in a stack!
When these stack space become full ,the device will cry out saying "Out of stack space" or"stack space is full" or  "Too much recursion".
A location where a computer stores this context is called the call stack*/
/*Error code code on the stack space*/
function chicken() {
return egg();
}
function egg() {
return chicken();
}
console.log(chicken() + " came first

/*Output: Error*/
Chicken function call egg function and egg function will call chicken function and the same activity will occur till stack space is full.Error will pop up.*/

/*code:it will produce an error*/
function adult(){ return baby();}
function baby(){return adult();}

console.log(adult() +"give birth first");



/*Creating a function using different function reation techniques*/
function name_generator(city,pet)
{
 return "Name of music group could be: "+city+" "+pet+"band";
}

/*collecting  input */
city=prompt("Enter the name of your city");
pet=prompt("Enter a pet name");

/*calling a function and passing an argument*/
name_generator(city,pet);


/*After eating at bar you want to know total bill and split among the members at a percentage*/

console.log("Welcome to the tip calculator.");

var total_bill=prompt("What is the total bill for the food?");
console.log("Total Bill:$"+total_bill);
var _share_bill=prompt("How many people do  want share bill among");
var percentage_share=prompt(" What percentage tip   would you like to give?, is it 12 , 14 or 15");
var each_pays=(total_bill/5)+(total_bill *percentage_share/100);
console.log("Each person should pay :$"+each_pays);


/*Update in bill code*/
/*After eating at bar you want to know total bill and split among the members at a percentage*/
Algorithm
-Accept total bill 
-how many people do want share your money for them
-at what percentage do you want each to get
-display
=====> Problem :javascript is is doing concatenation while I want it to add numbers.
console.log("Welcome to the tip calculator.");

total_bill=prompt("What is the total bill for the food?");
console.log("Total Bill:$"+total_bill);
var _share_bill=prompt("How many people do  want share bill among");
var percentage_share=prompt(" What percentage tip   would you like to give?, is it 12 , 14 or 15");
total_bill=parseInt(total_bill);
 var each_pays=total_bill+[total_bill*12/100] ;/*total_bill=total_bill+1.12 ==>1.12 mean 100 percent plus 12 percen*/
  type(total);
console.log("Each person should pay :$"+each_pays);


===>
/Code:Problem of the day :How may letter make my name?
*/
_name=prompt("Enter first name");
console.log("First name is made of "+_name.length+" character[s]");


/code:That tell how many days left for if we will live for 90years if your current age is given.*/
 
-accept current_age
-work the numbers days the person has lived . so let call it days used or days lived.
-find total days on earth if he or she live for 90years.
-substract days used from the total

sol:
var days_in_a_year=365;
var years_on_earth=90;
console.log("Check the number of years to live");
current_age=prompt("Enter your current age?");
days_lived=current_age*365;
days_left=[years_on_earth*days_in_a_year]-[days_lived];

console.log("You have "+days_left+" days left to live on earth");
console.log("Or you have "+[years_on_earth-current_age]+" to live");
=======
//code 37
console.log(Math.min(2,4));

// 38

//code 38[96 days more]
console.log(Math.max(2,4));


// code 39[95 daya more] 

number=Number(prompt("Hello , enter age"));
console.log(number)


//code 40 [94 days]
function Queue (){
collection=[];
this.print=function(){console.log(collection);};
this.enqueue=function(data){return collection.push(data);};
this.dequeue=function(){ collection.shift();};
this.front=function(){ return collection[0];}

}

b= new Queue();
b.print();
b.enqueue(9);
b.enqueue(8);
b.enqueue(7);
b.print();
b.dequeue()
;b.front();


//code 41 
function Queue (){
collection=[];
this.print=function(){console.log(collection);};
this.enqueue=function(data){return collection.push(data);};
this.dequeue=function(){ return collection.shift()+"deleted"};
this.front=function(){ return "First data :" +collection[0];}
  
this.size=function(){
  return "Length of array is :"+collection.length;
}

}

b= new Queue();
b.print();
b.enqueue(9);
b.enqueue(8);
b.enqueue(7);
b.print();
b.size();

//code 42 [93 days more]
 counter = function() {
    let count = 0;
    return function() {
        return ++count;
    }
};

 x = counter();
 console.log("Buy ")
for(i=0;i<5;i++){
 console.log("price of Cassava GHC"+x());

;};



//code 43
//arrow function
short=(input1,input2)=> input1+input2;
short(7,8);

console.log(short)


// code 44
simplify=((a,b)=>a+b)(3,6,10)
console.log(simplify)

//code 45
generate_multiplier_function = a => (b => isNaN(b) || !b ? a : a*=b);
 five_multiples = generate_multiplier_function(5);
console.log(five_multiples(1)); 
five_multiples(3); 
five_multiples(4);


// code 46
simplify=((...args)=>a+b)(3,6,10)
console.log(simplify)


//code 47
theNumber = Number(prompt("Pick a number"));
if (!Number.isNaN(theNumber)) {
console.log("Your number is the square root of " +
theNumber * theNumber);
};
//code 48 [89 days]
l=2;
l=l+""+l;
l=parseInt(l);
beta=Number("l");
alpha_l=~~l;
reform_l=+l
//Way of converting string to numbers 
console.log(typeof l);
console.log(typeof beta);
console.log(typeof ~~l);
console.log(alpha_l);
console.log(typeof reform_l);
console.log(l*1)
//converting number string
megaNumber=56;
NewMegaNumber=megaNumber.toString();
ChangeMegaNumber=''+megaNumber;
reformMegaNumber=`${megaNumber}`;
megaNumberEnhanced=megaNumber.toLocaleString();
alteredMegaNumber=String(megaNumber);

console.log(typeof NewMegaNumber);

console.log(typeof ChangeMegaNumber);

console.log(typeof reformMegaNumber);

console.log(typeof megaNumberEnhanced);

console.log(typeof alteredMegaNumber)


   ?Trying classify values fro m user?
     SocialMedia_follower_views=prompt("Enter the view on social media");
     view=['small', 'Moderate', 'Huge'];
     if( SocialMedia_follower_views<10)
      {console.log("Social Media views is "+view[0]);}
     else if( SocialMedia_follower_views<100)
       {console.log("Social Media views is" +view[1]);}
     else {console.log("Social Media views is "+view[2]);}
   
?Produce result only when input is number?
SocialMedia_follower_views=Number(prompt("Enter the view on social media"));
     view=['small', 'Moderate', 'Huge'];
/*console.log(typeof SocialMedia_follower_views==true)
console.log(parseInt(SocialMedia_follower_views))*/
if(SocialMedia_follower_views)
/* if a number it produce result else is letter .Output : Redo it*/
    {if( SocialMedia_follower_views<10)
      {console.log("Social Media views is "+view[0]);}
     else if( SocialMedia_follower_views<100)
       {console.log("Social Media views is " +view[1]);}
     else {console.log("Social Media views is "+view[2]);}
    }
else{ console.log("Redo it ");}

 //code refinement          
==> Another approach:
SocialMedia_follower_views=Number(prompt("Enter the view on social media"));
     view=['small', 'Moderate', 'Huge'];//console.log(typeof SocialMedia_follower_views==true)
//console.log(parseInt(SocialMedia_follower_views))
if(-`${SocialMedia_follower_views}`)// if a number it produce result else nothing happen
    {if( SocialMedia_follower_views<10)
      {console.log("Social Media views is "+view[0]);}
     else if( SocialMedia_follower_views<100)
       {console.log("Social Media views is " +view[1]);}
     else {console.log("Social Media views is "+view[2]);}
    }



           


           
?Solve : Using loop find 2 raised to power to  10 and later write is short version with no loop?

           var answer=1;
delta=2
for (i=0;i<=9;i++)
{
  answer*=delta;
}
console.log(answer);
console.log(2**10);// short version



?Boolean games dicovered?
/*double exclamation can change   state of boolen values while preserving variable originality.*/
highTemp="true" ; lowTemp="talse"; 
console.log(!!highTemp);// produce false
console.log(!highTemp); // does not produce false in this state but 'true'

console.log*(!!lowTemp)// produce true
console.log(!lowTemp)// produce  still false 


/* implementing use highTemp and lowTemp in application*/
if(highTemp==true &&lowTemp==true){comsole.log("Is hot and temperature is increasing. Please exit this area");}
else if(lowTemp==false  &&!!highTemp==false){console.log("Cooling .Please if condition is bad exit");}

>>>>>>> 1767ea0559dd8102363d7b9464ccc608d383cf5d


===>



/*Problem solution: deleting bug [which I see it as precious gold] and adding parseInt to code to refine it.
console.log("Welcome to the tip calculator.");*/

/*
total_bill=prompt("What is the total bill for the food?");
console.log("Total Bill:$"+total_bill);
var _share_bill=prompt("How many people do  want share bill among");
var percentage_share=prompt(" What percentage tip   would you like to give?, is it 12 , 14 or 15");
total_bill=parseInt(total_bill);
 var each_pays=total_bill+[total_bill*12/100] ;/*total_bill=total_bill+1.12 ==>1.12 mean 100 percent plus 12 percen*/
 
console.log("Each person should pay :$"+each_pays);/*Square can give error when in calculation.Smart up or eye up.
*/



/*Work cool but need more refactoring*/
total_bill=prompt("What is the total bill for the food?");
console.log("Total Bill:$"+total_bill);
var _share_bill=prompt("How many people do  want share bill among");
var percentage_share=prompt(" What percentage tip   would you like to give?, is it 12 , 14 or 15");
total_bill=parseInt(total_bill);
 var each_pays=(total_bill)+(total_bill*12/100) ;/*total_bill=total_bill+1.12 ==>1.12 mean 100 percent plus 12 percen*/
console.log("Each person should pay :$"+each_pays);




/*Using user percentage to calculate total bill.*/
total_bill=prompt("What is the total bill for the food?");
console.log("Total Bill:$"+total_bill);
var _share_bill=prompt("How many people do  want share bill among");
var percentage_share=prompt(" What percentage tip   would you like to give?, is it 12 , 14 or 15");
total_bill=parseInt(total_bill);
 var each_pays=total_bill+(total_bill*percentage_share/100) ;
 
console.log("Each person should pay :$"+each_pays);


